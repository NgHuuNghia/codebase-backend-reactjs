input CreateRoleInput {
	code: String!
	description: String
	permissions: [String]!
}

input UpdateRoleInput {
	code: String
	description: String
	permissions: [String]
}

type Role {
	_id: ID!
	code: String!
	description: String
	permissions: [String]
	isActive: Boolean
	createdAt: Float
	updatedAt: Float
}

type Query {
	roles: [Role] @isAuthenticated #@hasPermission(permission: "ROLE_VIEW")
	getPermissions: [String]!
}

type Mutation {
	createRole(input: CreateRoleInput): Role
		@isAuthenticated
		@hasPermission(permission: "ROLE_CREATE")
	deleteRole(_id: ID!): Boolean
		@isAuthenticated
		@hasPermission(permission: "ROLE_DELETE")
	updateRole(_id: ID!, input: UpdateRoleInput): Role
		@isAuthenticated
		@hasPermission(permission: "ROLE_UPDATE")
}
